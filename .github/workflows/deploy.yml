name: Deploy to EC2

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Python dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install -r requirements.txt

      # Build Docker Image with environment variables
      - name: Build Docker Image
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          docker-compose build

      - name: Run Tests
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          docker-compose run web python manage.py test  

      - name: Deploy to EC2
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          EC2_KEY: ${{ secrets.EC2_KEY }}  
          EC2_HOST: ${{ secrets.EC2_HOST }} 
        run: |
          echo $EC2_KEY | base64 --decode > ec2_key.pem
          chmod 600 ec2_key.pem
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ubuntu@$EC2_HOST "
            set -e
            cd ~/blockhouse_app
            git pull origin main || { echo 'Git pull failed'; exit 1; }
            docker-compose down || { echo 'Docker-compose down failed'; exit 1; }
            echo 'DB_NAME=$DB_NAME' >> .env
            echo 'DB_USER=$DB_USER' >> .env
            echo 'DB_PASSWORD=$DB_PASSWORD' >> .env
            echo 'DB_HOST=$DB_HOST' >> .env
            echo 'DB_PORT=$DB_PORT' >> .env
            echo 'ALPHA_VANTAGE_API_KEY=$ALPHA_VANTAGE_API_KEY' >> .env
            docker-compose up -d || { echo 'Docker-compose up failed'; exit 1; }
          "
