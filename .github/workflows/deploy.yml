name: Deploy to EC2

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Install Docker
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose

      # Step 4: Install Python dependencies
      - name: Install requirements
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install -r requirements.txt

      # Step 5: Build the Docker image
      - name: Build Docker Image
        run: |
          docker-compose build

      # Step 6: Run Tests
      - name: Run Tests
        run: |
          docker-compose run web python manage.py test  

      # Step 7: Deploy to EC2
      - name: Deploy to EC2
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          EC2_KEY: ${{ secrets.EC2_KEY }}  
          EC2_HOST: ${{ secrets.EC2_HOST }} 
        run: |
          # Decode the PEM key
          echo $EC2_KEY | base64 --decode > ec2_key.pem
          chmod 600 ec2_key.pem  # Secure the key

          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ubuntu@$EC2_HOST "
            # Navigate to the app directory
            cd ~/blockhouse_app
            
            # Pull the latest changes (if needed)
            git pull origin main

            # Stop and remove existing containers
            docker-compose down
            
            # Start the application with environment variables
            docker-compose up -d
          "
